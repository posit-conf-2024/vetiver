---
title: Deploy your model
subtitle: Deploy and maintain models with vetiver (Python)
format: html
---

## Create a new vetiver model 🌳🌴🌲🌲🌴🌳🌴🌳🌲

Fit a random forest model

```{python}
import pandas as pd
import numpy as np
from sklearn import preprocessing, ensemble, pipeline, compose, model_selection

housing = pd.read_parquet("../data/housing.parquet")
X, y = housing[["bedrooms", "bathrooms", "sqft_living", "yr_built"]], np.log10(
    housing["price"]
)
X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=0.2)

housing_fit = ensemble.RandomForestRegressor(n_estimators=200).fit(X_train, y_train)
```

Store your model on Posit Connect:

```{python}
from vetiver import VetiverModel, vetiver_pin_write
from pins import board_connect
import os
from dotenv import load_dotenv
load_dotenv()

v = VetiverModel(___, ___, ___)
board = ___
vetiver_pin_write(board, v)
```

## Model Card ❤️

```{python}
import vetiver
vetiver.model_card()
```

## Create a vetiver REST API 🏺

```{python}
from vetiver import VetiverAPI

api = ___
api.run()
```

## Deploy to Posit Connect 🚀

```{python}
from rsconnect.api import RSConnectServer
import os
api_key = os.getenv("CONNECT_API_KEY")
rsc_url = os.getenv("CONNECT_SERVER")

connect_server = RSConnectServer(url = rsc_url, api_key = api_key)

vetiver.deploy_rsconnect(
    connect_server = connect_server,
    board = ___,
    pin_name = ___,
)
```

## Call your new API endpoints ☎️

Return predictions from your model API:

```{python}
from vetiver import predict, vetiver_endpoint

url = ___
endpoint = ___(url)
predict(___, X_test.head(10))
```

Optional: try `/metadata` or `/ping` here:

```{python}
import requests
url = ___
print(requests.get(url).content)
```

Return predictions from **your neighbor's** model API:

```{python}
url = ___
endpoint = ___(url)
predict(___, X_test.head(10))
```


## Model input prototype 🔀

For our R model:

```{python}
import requests

url = "https://pub.demo.posit.team/public/seattle-housing-rstats/prototype"
print(requests.get(url).content)
```

For our Python model:

```{python}
url = "https://pub.demo.posit.team/public/seattle-housing-python/prototype"
print(requests.get(url).content)
```

Make a custom input data prototype after checking out this documentation:
<https://rstudio.github.io/vetiver-python/stable/reference/VetiverModel.html#VetiverModel>

```{python}
v = vetiver_model(___, ___, prototype_data = ___)
VetiverAPI(___).run()
```